{"version":3,"sources":["components/Note.jsx","components/NoteForm.jsx","components/loginForm.jsx","components/Togglable.jsx","components/Notification.jsx","components/Footer.jsx","utils/axios.js","services/note.js","services/login.js","App.jsx","index.jsx"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","NoteForm","createNote","useState","newNote","setNewNote","onSubmit","event","preventDefault","id","value","onChange","target","type","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","name","Togglable","React","forwardRef","props","ref","buttonLabel","children","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","displayName","Notification","message","Footer","color","fontStyle","fontSize","throwError","response","status","statusText","error","Error","get","url","a","fetch","ok","json","post","data","token","options","method","headers","body","JSON","stringify","put","getAll","axios","create","newObject","update","setToken","newToken","login","credentials","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUsername","setPassword","user","setUser","noteFormRef","createRef","useEffect","noteService","then","initialNotes","catch","e","setTimeout","loggedUserJSON","window","localStorage","getItem","parse","addNote","noteObject","current","returnedNote","concat","toString","handleLogin","console","log","loginService","setItem","notesToShow","filter","map","i","key","find","n","changedNote","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc251306.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important'\n    : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React, { useState } from 'react'\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState('')\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    createNote({\n      content: newNote,\n      important: false\n    })\n    setNewNote('')\n  }\n\n  return (\n    <div className='formDiv'>\n      <h2>Create a new note</h2>\n      <form onSubmit={addNote}>\n        <input\n          id='new-note'\n          value={newNote}\n          onChange={handleChange}\n        />\n        <button id='save-button' type='submit'>save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NoteForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            id='username'\n            type='text'\n            value={username}\n            name='Username'\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id='password'\n            type='password'\n            value={password}\n            name='Password'\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id='login-button' type='submit'>login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const { buttonLabel, children } = props\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className='togglableContent'>\n        {children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable\n","import React from 'react'\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nexport default Footer\n","const throwError = (response) => {\n  const [status, statusText] = [response.status, response.statusText]\n  const error = `Request failed with status code ${status} (${statusText})`\n  throw new Error(error)\n}\n\nconst get = async (url) => {\n  const response = await fetch(url)\n  if (!response.ok) throwError(response)\n  const json = await response.json()\n  return json\n}\n\nconst post = async (url, data, token) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n      'Authorization': token\n    },\n    body: JSON.stringify(data)\n  }\n  const response = await fetch(url, options)\n  if (!response.ok) throwError(response)\n  const json = await response.json()\n  return json\n}\n\nconst put = async (url, data) => {\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n    },\n    body: JSON.stringify(data)\n  }\n  const response = await fetch(url, options)\n  if (!response.ok) throwError(response)\n  const json = await response.json()\n  return json\n}\n\nexport default { get, post, put }\n","import axios from '../utils/axios'\n\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = async newObject => {\n  return axios.post(baseUrl, newObject, token)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport default { getAll, create, update, setToken }\n","import axios from '../utils/axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response\n}\n\nexport default { login }\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport NoteForm from './components/NoteForm'\nimport LoginForm from './components/loginForm'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/note'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const noteFormRef = React.createRef()\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n      .catch(e => {\n        const error = e.response.data.error\n        setErrorMessage(error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        console.error(error)\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const addNote = (noteObject) => {\n    noteFormRef.current.toggleVisibility()\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(error.toString())\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in with', username, password)\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      )\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch(exception) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel='login'>\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const noteForm = () => (\n    <Togglable buttonLabel='new note' ref={noteFormRef}>\n      <NoteForm createNote={addNote} />\n    </Togglable>\n  )\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n        </div>\n      }\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => {\n          return <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        })}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}